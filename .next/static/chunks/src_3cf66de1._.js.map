{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/projects/nutri-mind/src/features/auth/index.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { supabase } from \"@/lib/supabase\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserForm } from \"@/stores/userFormApi\";\r\nimport { RootState } from \"@/stores\";\r\n\r\nexport function LoginForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n  const userForm = useSelector((state: RootState) => selectUserForm(state.userForm, email));\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n    if (error) setError(error.message);\r\n    else {\r\n      if (userForm) router.push(\"/\");\r\n      else router.push(\"/form\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-zinc-900/80 rounded-2xl shadow-xl border border-zinc-200 dark:border-zinc-800 p-8 w-full max-w-md\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">Login</h2>\r\n      <form className=\"space-y-4\" onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          className=\"w-full px-4 py-2 rounded-lg border border-border bg-white/80 dark:bg-zinc-900/70 text-base text-foreground placeholder:text-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition hover:border-primary/70 shadow-sm\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"w-full px-4 py-2 rounded-lg border border-border bg-white/80 dark:bg-zinc-900/70 text-base text-foreground placeholder:text-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition hover:border-primary/70 shadow-sm\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-primary w-full py-2 rounded-lg font-semibold text-lg bg-primary text-white shadow-md hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 transition\" disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Login\"}\r\n        </button>\r\n        {error && <div className=\"text-red-500 text-sm mt-2\">{error}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SignupForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  const handleSignup = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n    const { error } = await supabase.auth.signUp({ email, password, options: { data: { name } } });\r\n    if (error) setError(error.message);\r\n    else setSuccess(\"Check your email to confirm your account.\");\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-zinc-900/80 rounded-2xl shadow-xl border border-zinc-200 dark:border-zinc-800 p-8 w-full max-w-md\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">Sign Up</h2>\r\n      <form className=\"space-y-4\" onSubmit={handleSignup}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          className=\"w-full px-4 py-2 rounded-lg border border-border bg-white/80 dark:bg-zinc-900/70 text-base text-foreground placeholder:text-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition hover:border-primary/70 shadow-sm\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          className=\"w-full px-4 py-2 rounded-lg border border-border bg-white/80 dark:bg-zinc-900/70 text-base text-foreground placeholder:text-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition hover:border-primary/70 shadow-sm\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"w-full px-4 py-2 rounded-lg border border-border bg-white/80 dark:bg-zinc-900/70 text-base text-foreground placeholder:text-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition hover:border-primary/70 shadow-sm\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-primary w-full py-2 rounded-lg font-semibold text-lg bg-primary text-white shadow-md hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 transition\" disabled={loading}>\r\n          {loading ? \"Loading...\" : \"Sign Up\"}\r\n        </button>\r\n        {error && <div className=\"text-red-500 text-sm mt-2\">{error}</div>}\r\n        {success && <div className=\"text-green-600 text-sm mt-2\">{success}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/projects/nutri-mind/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { LoginForm } from \"@/features/auth\";\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <section className=\"flex flex-col items-center justify-center min-h-[60vh]\">\r\n      <LoginForm />\r\n    </section>\r\n  );\r\n} "],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC,oIAAA,CAAA,YAAS;;;;;;;;;;AAGhB;KANwB","debugId":null}}]
}